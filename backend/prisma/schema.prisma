generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int            @id @default(autoincrement())
  name            String
  email           String         @unique
  password        String
  date_registered DateTime       @default(now())
  wallet          Wallet?
  certificate     Certificate[]
  bids            Bid[]
  products        Product[]
}

model Wallet {
  id             Int            @id @default(autoincrement())
  balance     Decimal
  userId      Int    @unique
  user        User   @relation(fields: [userId], references: [id])
  transactions Transaction[]
}

model Certificate {
  id        Int      @id @default(autoincrement())
  type      String
  image_url String   @default("")
  info      String
  user      User    @relation(fields: [userId], references: [id])
  userId    Int     @unique
}

model Bid {
  id         Int      @id @default(autoincrement())
  date_time  DateTime @default(now())
  bid        Decimal
  user       User     @relation(fields: [userId], references: [id])
  auction    Auction  @relation(fields: [auctionId], references: [id])
  status     String   @default("active")
  userId     Int
  auctionId  Int
}

model Auction {
  id           Int        @id @default(autoincrement())
  product      Product    @relation(fields: [productId], references: [id])
  date_started DateTime   @default(now())
  date_ends    DateTime
  minimum_bid  Decimal
  bids         Bid[]
  status       String     @default("active")
  productId    Int  @unique
  sellerId     Int
}

model Product {
  id          Int        @id @default(autoincrement())
  name        String
  description String
  image_url   String
  listed_at   DateTime   @default(now())
  category    String
  seller      User       @relation(fields: [sellerId], references: [id])
  sellerId    Int
  auction     Auction?  
  transaction Transaction?
  sold        Boolean    @default(false)
  status      ProductStatus @default(STANDBY)
}

model Transaction {
  id          Int      @id @default(autoincrement())
  type        String
  amount      Decimal
  date        DateTime @default(now())
  wallet      Wallet   @relation(fields: [walletId], references: [id])
  walletId    Int
  product     Product? @relation(fields: [productId], references: [id])
  productId   Int? @unique
}

enum ProductStatus {
  STANDBY
  AUCTION
  SOLD
}